G = DAG of feature dependencies
features = list of requested features
R = list of runtimes for all features
b = 45 = time to write in cache
c = 55 = time to read from cache

time_all = 0
for f in features:
    f_node = G.find(f)
    if f_node == null:
	    time_all += R(f)
	else if f is cached:
	    time_all += c
	else
	    time_all += R(f) + calc_time(f_node)
	    if f is a leaf:
	        time_all += 45


int calc_time(f_node):
    parents = f_node.getAllParents()
    parent_time = 0
    for p in parents:
        if p is root:
            return parent_time
    	else if isCached(p):
    	    parent_time += 55 - R(p)
    	else:
    	    parent_time += 45 + calc_time(p)
    	    p.cached = true
    return parent_time
